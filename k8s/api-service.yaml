apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  namespace: wordpress-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      containers:
      - name: api
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "100m"
            memory: "128Mi"
          requests:
            cpu: "50m"
            memory: "64Mi"
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: config
        configMap:
          name: api-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: wordpress-demo
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head><title>API Service</title></head>
    <body>
      <h1>API Service</h1>
      <p>This is a simple API service running alongside WordPress</p>
      <p>Timestamp: $(date)</p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: wordpress-demo
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: api-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: wordpress-demo
  annotations:
    # For EKS with ALB (cost-effective shared ALB)
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: shared-alb  # KEY: Same ALB as WordPress
    # For local KIND with NGINX
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: alb  # Use 'nginx' for local KIND
  rules:
  - host: api.yourdomain.com  # Use 'api.local' for KIND
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 80